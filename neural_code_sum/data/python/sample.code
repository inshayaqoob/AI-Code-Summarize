def resource patch context data dict check access 'resource patch' context data dict show context {'model' context['model'] 'session' context['session'] 'user' context['user'] 'auth user obj' context['auth user obj']}resource dict get action 'resource show' show context {'id' get or bust data dict 'id' } patched dict resource dict patched update data dict return update resource update context patched
def pyramid laplacian image max layer -1 downscale 2 sigma None order 1 mode 'reflect' cval 0 check factor downscale image img as float image if sigma is None sigma 2 * downscale / 6 0 layer 0rows image shape[ 0 ]cols image shape[ 1 ]smoothed image smooth image sigma mode cval yield image - smoothed image while layer max layer layer + 1out rows math ceil rows / float downscale out cols math ceil cols / float downscale resized image resize smoothed image out rows out cols order order mode mode cval cval smoothed image smooth resized image sigma mode cval prev rows rowsprev cols colsrows resized image shape[ 0 ]cols resized image shape[ 1 ]if prev rows rows and prev cols cols break yield resized image - smoothed image
def get fun fun with get serv ret None commit True as cur sql 'SELEC Ts id s jid s full ret\n FRO Msalt returnss\n JOIN SELECTMAX `jid` asjid\nfromsalt returns GROUPB Yfun id max\n O Ns jid max jid\n WHER Es fun %s\n'cur execute sql fun data cur fetchall ret {}if data for minion full ret in data ret[minion] full retreturn ret
def get svc avail path return AVAIL SVR DIRS
def store temp file filedata filename path None filename get filename from path filename filename filename[ 100 ]options Config if path target path pathelse tmp path options cuckoo get 'tmppath' '/tmp' target path os path join tmp path 'cuckoo-tmp' if not os path exists target path os mkdir target path tmp dir tempfile mkdtemp prefix 'upload ' dir target path tmp file path os path join tmp dir filename with open tmp file path 'wb' as tmp file if hasattr filedata 'read' chunk filedata read 1024 while chunk tmp file write chunk chunk filedata read 1024 else tmp file write filedata return tmp file path
def create Target Dirs if not os path isdir paths POCSUITE OUTPUT PATH try if not os path isdir paths POCSUITE OUTPUT PATH os makedirs paths POCSUITE OUTPUT PATH 493 warn Msg "using'%s'astheoutputdirectory" % paths POCSUITE OUTPUT PATH logger log CUSTOM LOGGING WARNING warn Msg except OS Error IO Error as ex try temp Dir tempfile mkdtemp prefix 'pocsuiteoutput' except Exception as err Msg "unabletowritetothetemporarydirectory '%s' " % err Msg + ' Pleasemakesurethatyourdiskisnotfulland'err Msg + 'thatyouhavesufficientwritepermissionsto'err Msg + 'createtemporaryfilesand/ordirectories'raise Pocsuite System Exception err Msg warn Msg 'unabletocreateregularoutputdirectory'warn Msg + "'%s' %s " % paths POCSUITE OUTPUT PATH get Unicode ex warn Msg + " Usingtemporarydirectory'%s'instead" % get Unicode temp Dir logger log CUSTOM LOGGING WARNING warn Msg paths POCUSITE OUTPUT PATH temp Dir
def unhex s bits 0for c in s c bytes c if '0 ' < c < '9 ' i ord '0 ' elif 'a' < c < 'f' i ord 'a' - 10 elif 'A' < c < 'F' i ord 'A' - 10 else assert False 'non-hexdigit' + repr c bits bits * 16 + ord c - i return bits
def setwindowposition folder alias x y finder getfinder args {}attrs {}aeobj 0 aetypes Object Specifier want aetypes Type 'cfol' form 'alis' seld folder alias fr None aeobj 1 aetypes Object Specifier want aetypes Type 'prop' form 'prop' seld aetypes Type 'cwnd' fr aeobj 0 aeobj 2 aetypes Object Specifier want aetypes Type 'prop' form 'prop' seld aetypes Type 'posn' fr aeobj 1 args['----'] aeobj 2args['data'] [x y] reply args attrs finder send 'core' 'setd' args attrs if args has key 'errn' raise Error aetools decodeerror args if args has key '----' return args['----']
def walk top topdown True followlinks False names os listdir top dirs nondirs [] [] for name in names if path isdir path join top name dirs append name else nondirs append name if topdown yield top dirs nondirs for name in dirs fullpath path join top name if followlinks or not path islink fullpath for x in walk fullpath topdown followlinks yield x if not topdown yield top dirs nondirs
def url filename url match upload title re match url if match return match group 'filename' else return url
@testing requires testing data@requires mnedef test other volume source spaces tempdir Temp Dir temp name op join tempdir 'temp-src fif' run subprocess ['mne volume source space' '--grid' '7 0' '--src' temp name '--mri' fname mri] src read source spaces temp name src new setup volume source space None pos 7 0 mri fname mri subjects dir subjects dir compare source spaces src src new mode 'approx' assert true 'volume shape' in repr src del srcdel src newassert raises Value Error setup volume source space 'sample' temp name pos 7 0 sphere [1 0 1 0] mri fname mri subjects dir subjects dir run subprocess ['mne volume source space' '--grid' '7 0' '--src' temp name] assert raises Value Error read source spaces temp name
def get preamble latex preamble rc Params get u'pgf preamble' u'' if type latex preamble list latex preamble u'\n' join latex preamble return latex preamble
def sdm spoly f g O K phantom None if not f or not g return sdm zero LM 1 sdm LM f LM 2 sdm LM g if LM 1 [ 0 ] LM 2 [ 0 ] return sdm zero LM 1 LM 1 [ 1 ]LM 2 LM 2 [ 1 ]lcm monomial lcm LM 1 LM 2 m1 monomial div lcm LM 1 m2 monomial div lcm LM 2 c K quo - sdm LC f K sdm LC g K r1 sdm add sdm mul term f m1 K one O K sdm mul term g m2 c O K O K if phantom is None return r1 r 2 sdm add sdm mul term phantom[ 0 ] m1 K one O K sdm mul term phantom[ 1 ] m2 c O K O K return r1 r2
def upgrade migrate engine meta Meta Data meta bind migrate enginevolume type projects Table 'volume type projects' meta autoload True if migrate engine name 'postgresql' sql 'ALTERTABL Evolume type projects ALTERCOLUM Ndeleted' + 'TYPEINTEGERUSIN Gdeleted integer' migrate engine execute sql else volume type projects c deleted alter Integer
def analyze modules project task handle taskhandle Null Task Handle resources project get python files job set task handle create jobset ' Analyzing Modules' len resources for resource in resources job set started job resource path analyze module project resource job set finished job
def get sw login version return '-' join get sw version strip build num True split '-' [1 -2 ]
def Set Help Menu Other Help main Menu global help ID Mapif help ID Map is None help ID Map {}cmd ID win 32 ui ID HELP OTHE Rexclude List [' Main Python Documentation' ' Pythonwin Reference']first List List All Help Files exclude Fnames []for desc fname in first List if desc in exclude List exclude Fnames append fname help Descs []for desc fname in first List if fname not in exclude Fnames help ID Map[cmd ID] desc fname win 32 ui Get Main Frame Hook Command Handle Help Other Command cmd ID cmd ID cmd ID + 1 help Menu main Menu Get Sub Menu main Menu Get Menu Item Count - 1 other Help Menu Pos 2other Menu help Menu Get Sub Menu other Help Menu Pos while other Menu Get Menu Item Count other Menu Delete Menu 0 win 32 con MF BYPOSITION if help ID Map for id desc fname in help ID Map iteritems other Menu Append Menu win 32 con MF ENABLED win 32 con MF STRING id desc else help Menu Enable Menu Item other Help Menu Pos win 32 con MF BYPOSITION win 32 con MF GRAYED
def to location code falcon HTTP 302 raise falcon http status HTTP Status code {'location' location}
def select command corrected commands try selector Command Selector corrected commands except No Rule Matched logs failed ' Nofucksgiven' returnif not settings require confirmation logs show corrected command selector value return selector valuelogs confirm text selector value for action in read actions if action const ACTION SELECT sys stderr write '\n' return selector valueelif action const ACTION ABORT logs failed '\n Aborted' returnelif action const ACTION PREVIOUS selector previous logs confirm text selector value elif action const ACTION NEXT selector next logs confirm text selector value
def partial project endog exog x1 x2 endog exog params np linalg pinv x2 dot x1 predicted x2 dot params residual x1 - predicted res Bunch params params fittedvalues predicted resid residual return res
